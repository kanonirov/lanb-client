package ru.lanbilling.webservice.wsdl;

import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * LANBilling 1.9 API
 *
 * This class was generated by Apache CXF 3.1.3 2015-10-25T17:29:38.076+06:00
 * Generated source version: 3.1.3
 * 
 */
@WebServiceClient(name = "api3", wsdlLocation = "wsdl/api3.wsdl", targetNamespace = "urn:api3")
public class Api3 extends Service {

	public final static URL WSDL_LOCATION = Api3.class.getResource("/wsdl/api3.wsdl");

	public final static QName SERVICE = new QName("urn:api3", "api3");
	public final static QName Api3 = new QName("urn:api3", "api3");

	public Api3() {
		super(WSDL_LOCATION, SERVICE);
	}

	public Api3(URL wsdlLocation) {
		super(wsdlLocation, SERVICE);
	}

	public Api3(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public Api3(WebServiceFeature... features) {
		super(WSDL_LOCATION, SERVICE, features);
	}

	public Api3(URL wsdlLocation, WebServiceFeature... features) {
		super(wsdlLocation, SERVICE, features);
	}

	public Api3(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
		super(wsdlLocation, serviceName, features);
	}

	/**
	 *
	 * @return returns Api3PortType
	 */
	@WebEndpoint(name = "api3")
	public Api3PortType getApi3() {
		return super.getPort(Api3, Api3PortType.class);
	}

	/**
	 * 
	 * @param features
	 *            A list of {@link javax.xml.ws.WebServiceFeature} to configure
	 *            on the proxy. Supported features not in the
	 *            <code>features</code> parameter will have their default
	 *            values.
	 * @return returns Api3PortType
	 */
	@WebEndpoint(name = "api3")
	public Api3PortType getApi3(WebServiceFeature... features) {
		return super.getPort(Api3, Api3PortType.class, features);
	}

}
